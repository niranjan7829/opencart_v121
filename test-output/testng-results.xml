<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="6" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-02T19:49:53 IST" name="Suite" finished-at="2025-02-02T19:52:41 IST" duration-ms="168104">
    <groups>
      <group name="Master">
        <method signature="TC002_LoginTest.LoginVerify()[pri:0, instance:testCases.TC002_LoginTest@5ed731d0]" name="LoginVerify" class="testCases.TC002_LoginTest"/>
        <method signature="TC_001account_reg_page.account_regirstationpage()[pri:0, instance:testCases.TC_001account_reg_page@6cbcf243]" name="account_regirstationpage" class="testCases.TC_001account_reg_page"/>
      </group> <!-- Master -->
      <group name="datadriven">
        <method signature="TC_003_Login_DataVerify.LoginVerify(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_003_Login_DataVerify@3234f74e]" name="LoginVerify" class="testCases.TC_003_Login_DataVerify"/>
      </group> <!-- datadriven -->
      <group name="Sanity">
        <method signature="TC_001account_reg_page.account_regirstationpage()[pri:0, instance:testCases.TC_001account_reg_page@6cbcf243]" name="account_regirstationpage" class="testCases.TC_001account_reg_page"/>
      </group> <!-- Sanity -->
      <group name="Regression">
        <method signature="TC002_LoginTest.LoginVerify()[pri:0, instance:testCases.TC002_LoginTest@5ed731d0]" name="LoginVerify" class="testCases.TC002_LoginTest"/>
      </group> <!-- Regression -->
    </groups>
    <test started-at="2025-02-02T19:49:53 IST" name="Test" finished-at="2025-02-02T19:52:41 IST" duration-ms="168104">
      <class name="testCases.TC_001account_reg_page">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_001account_reg_page@6cbcf243]" started-at="2025-02-02T19:49:53 IST" name="setUp" finished-at="2025-02-02T19:50:29 IST" duration-ms="36118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="account_regirstationpage()[pri:0, instance:testCases.TC_001account_reg_page@6cbcf243]" started-at="2025-02-02T19:50:29 IST" name="account_regirstationpage" finished-at="2025-02-02T19:50:36 IST" duration-ms="6261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- account_regirstationpage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TC_001account_reg_page@6cbcf243]" started-at="2025-02-02T19:50:36 IST" name="tearDown" finished-at="2025-02-02T19:50:36 IST" duration-ms="660" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TC_001account_reg_page -->
      <class name="testCases.TC002_LoginTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String)[pri:0, instance:testCases.TC002_LoginTest@5ed731d0]" started-at="2025-02-02T19:50:36 IST" name="setUp" finished-at="2025-02-02T19:51:03 IST" duration-ms="26756" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="LoginVerify()[pri:0, instance:testCases.TC002_LoginTest@5ed731d0]" started-at="2025-02-02T19:51:03 IST" name="LoginVerify" finished-at="2025-02-02T19:51:06 IST" duration-ms="2822" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginVerify -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TC002_LoginTest@5ed731d0]" started-at="2025-02-02T19:51:06 IST" name="tearDown" finished-at="2025-02-02T19:51:06 IST" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TC002_LoginTest -->
      <class name="testCases.TC_003_Login_DataVerify">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_003_Login_DataVerify@3234f74e]" started-at="2025-02-02T19:51:06 IST" name="setUp" finished-at="2025-02-02T19:51:38 IST" duration-ms="31369" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="LoginVerify(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_003_Login_DataVerify@3234f74e]" started-at="2025-02-02T19:51:40 IST" name="LoginVerify" data-provider="LoginData" finished-at="2025-02-02T19:51:51 IST" duration-ms="10781" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[niranjanmurthy3323@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Niranjan@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginVerify -->
        <test-method signature="LoginVerify(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_003_Login_DataVerify@3234f74e]" started-at="2025-02-02T19:51:51 IST" name="LoginVerify" data-provider="LoginData" finished-at="2025-02-02T19:52:04 IST" duration-ms="13304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[lakshmi@yahoo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Laxmi]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginVerify -->
        <test-method signature="LoginVerify(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_003_Login_DataVerify@3234f74e]" started-at="2025-02-02T19:52:04 IST" name="LoginVerify" data-provider="LoginData" finished-at="2025-02-02T19:52:11 IST" duration-ms="6720" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[laksh@yahoo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Lakshmi]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginVerify -->
        <test-method signature="LoginVerify(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_003_Login_DataVerify@3234f74e]" started-at="2025-02-02T19:52:11 IST" name="LoginVerify" data-provider="LoginData" finished-at="2025-02-02T19:52:22 IST" duration-ms="11515" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[laks@yahoo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[xyz]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[valid]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testCases.TC_003_Login_DataVerify.LoginVerify(TC_003_Login_DataVerify.java:62)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginVerify -->
        <test-method signature="LoginVerify(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_003_Login_DataVerify@3234f74e]" started-at="2025-02-02T19:52:23 IST" name="LoginVerify" data-provider="LoginData" finished-at="2025-02-02T19:52:28 IST" duration-ms="5897" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc123@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginVerify -->
        <test-method signature="LoginVerify(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_003_Login_DataVerify@3234f74e]" started-at="2025-02-02T19:52:28 IST" name="LoginVerify" data-provider="LoginData" finished-at="2025-02-02T19:52:40 IST" duration-ms="11619" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[valid]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testCases.TC_003_Login_DataVerify.LoginVerify(TC_003_Login_DataVerify.java:62)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginVerify -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TC_003_Login_DataVerify@3234f74e]" started-at="2025-02-02T19:52:40 IST" name="tearDown" finished-at="2025-02-02T19:52:41 IST" duration-ms="821" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TC_003_Login_DataVerify -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
